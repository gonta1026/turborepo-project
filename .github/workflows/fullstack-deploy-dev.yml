# フルスタックアプリケーション開発環境デプロイワークフロー
# APIとダッシュボードの変更検出時に自動でdev環境へデプロイ実行
name: Deploy Full Stack to Dev
on:
  # メインブランチへのプッシュでAPI・ダッシュボード・共有パッケージ変更時にトリガー
  push:
    branches: [main]
    paths:
      - "apps/api/**"
      - "apps/dashboard/**"
      - "packages/**" # 共有パッケージ
      - "package.json" # ルート依存関係
      - "turbo.json" # Turboビルド設定
  # 手動実行オプション
  workflow_dispatch:
    inputs:
      message:
        description: "Deployment message"
        required: false
        type: string
        default: "Manual full stack deployment to dev environment"

jobs:
  # ===== フェーズ1: 品質チェック（Turborepo + テスト） =====
  # 再利用可能ワークフローを使用してTurboビルド・テストを実行
  test:
    uses: "./.github/workflows/test-reusable.yml"
    with:
      test-db-password: "test_password"
    secrets:
      turbo-token: ${{ secrets.TURBO_TOKEN }}

  # ===== フェーズ2: 本番デプロイ（テスト成功必須） =====
  # Turboビルド・テストが成功した場合のみ実行される統合デプロイ
  deploy:
    needs: test # Turboビルド・テストの成功が前提条件
    permissions:
      contents: read # リポジトリ読み取り権限
      id-token: write # OIDC トークン生成権限（Workload Identity用）
    # 再利用可能ワークフローを呼び出し（実際のデプロイ処理）
    uses: "./.github/workflows/fullstack-deploy-reusable.yml"
    with:
      # デプロイ環境設定
      ENVIRONMENT: dev
      PROJECT_ID: terraform-gcp-466623
      REGION: asia-northeast1
      VPC_CONNECTOR_NAME: main-connector
      # Cloud Runサービス名
      API_SERVICE_NAME: api-service
      DASHBOARD_SERVICE_NAME: dashboard-service
      # 公開URL
      API_BASE_URL: https://dev.api.my-learn-iac-sample.site
      DASHBOARD_BASE_URL: https://dev.dashboard.my-learn-iac-sample.site
    secrets:
      # 機密情報（GitHub Secrets経由で安全に渡す）
      db-password: ${{ secrets.DB_PASSWORD }} # データベースパスワード
      wif-provider: ${{ secrets.DEV_WIF_PROVIDER }} # Workload Identity Provider
      service-account: ${{ secrets.DEV_SERVICE_ACCOUNT }} # GCPサービスアカウント
      gcs-bucket-name: ${{ secrets.DEV_GCS_BUCKET_NAME }} # フロントエンド用GCSバケット
      cdn-url-map-name: ${{ secrets.DEV_CDN_URL_MAP_NAME }} # CDN URL マップ名
